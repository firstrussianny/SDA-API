name: backup

on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 6,15 * * *"

jobs:
  backup:
    runs-on: ubuntu-latest

    container:
      image: docker/compose:1.24.1

    steps:
      - uses: actions/checkout@v2

      - name: Backup DB
        env:
          COMPOSE_PROJECT_NAME: sda-api
          APP_PUBLIC_PORT: "172.17.0.1:8000"
          API_SITE_URL: ${{ secrets.API_SITE_URL }}
          DOCKER_CA_CERT: ${{ secrets.DOCKER_CA_CERT }}
          DOCKER_CLIENT_CERT: ${{ secrets.DOCKER_CLIENT_CERT }}
          DOCKER_CLIENT_KEY: ${{ secrets.DOCKER_CLIENT_KEY }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BACKUP_BUCKET: ${{ secrets.AWS_BACKUP_BUCKET }}
          PGDATA_VOLUME: /var/lib/docker-volumes/firstrussianny/pgdata

        run: |
          # docker-machine env vars must be defined in the script
          # otherwise github fails to execute this script in the container
          # since it applies global env vars to the host machine running docker
          export DOCKER_CERT_PATH=/tmp/docker-certs
          export DOCKER_TLS_VERIFY=1
          export DOCKER_HOST=${{ secrets.DOCKER_HOST }}
          export DOCKER_MACHINE_NAME=${{ secrets.DOCKER_MACHINE_NAME }}
          mkdir -p $DOCKER_CERT_PATH
          printenv DOCKER_CA_CERT > $DOCKER_CERT_PATH/ca.pem
          printenv DOCKER_CLIENT_CERT > $DOCKER_CERT_PATH/cert.pem
          printenv DOCKER_CLIENT_KEY > $DOCKER_CERT_PATH/key.pem

          docker-compose run --rm \
            -e "PGUSER=$POSTGRES_USER" \
            -e "PGPASSWORD=$POSTGRES_PASSWORD" \
            -e "PGDATABASE=$POSTGRES_DB" \
            -v "$BACKUP_VOLUME:/backup" \
            db \
            pg_dump \
              -h db \
              --data-only \
              --file=/backup/$(date -u +"%Y-%m-%dT%H-%M-%SZ").sql

          docker run --rm \
            -v $BACKUP_VOLUME:/backups \
            -w /backups \
            -e AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION \
            -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
            -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
            mesosphere/aws-cli \
            s3 sync . s3://$AWS_BACKUP_BUCKET/
